
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author kotta
 */
public class updateevent extends javax.swing.JFrame {

    /**
     * Creates new form updateevent
     */
    public updateevent() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Show events");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 28, -1, -1));

        jButton2.setText("UPDATE ");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton2MouseEntered(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 250, 116, 41));

        jButton3.setText("back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 6, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "event id", "day number", "event name", "Event Date and Time", "venue", "judge 1", "judge 2", "faculty team", "1st prize ", "2nd prize", "co ordinating team number", "sponsor", "Budget"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jScrollPane1.setViewportView(jScrollPane2);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 57, 1120, 160));

        jLabel1.setForeground(new java.awt.Color(255, 204, 51));
        jLabel1.setText("Enter Event Id");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, 120, -1));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 270, 195, -1));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "event Id", "Day Number", "Name", "Date&Time", "Venue", "Judge1", "Judge2", "Faculty Team", "1st Prize", "2nd Prize", "Co ordinating team", "Sponsor", "Budget"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable2);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, 989, 59));

        jButton4.setText("Show");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 330, -1, -1));

        jButton5.setText("Update this Record");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 490, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\kotta\\Documents\\Cultural Fest Management images\\Djsingers.jpg")); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, -24, -1, 1070));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
      try {
    Class.forName("com.mysql.jdbc.Driver");
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/demo", "root", "root");
    Statement st = con.createStatement();
    String sql = "SELECT * FROM event_details";
    ResultSet rs = st.executeQuery(sql);
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0);
    while (rs.next()) {
        String dateTimeString = rs.getTimestamp(4).toString();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        java.util.Date dateTime = sdf.parse(dateTimeString);
        String formattedDateTimeString = sdf.format(dateTime);
        model.addRow(new String[]{rs.getString(1), String.valueOf(rs.getInt(2)), rs.getString(3), formattedDateTimeString, rs.getString(5), rs.getString(6), rs.getString(7), String.valueOf(rs.getInt(8)), rs.getString(9), rs.getString(10), String.valueOf(rs.getInt(11)), rs.getString(12), String.valueOf(rs.getInt(13))});
    }
    rs.close();
    st.close();
    con.close();
} catch (Exception e) {
    JOptionPane.showMessageDialog(this, e);
}


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseEntered
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton2MouseEntered
   
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
      try {
    Class.forName("com.mysql.jdbc.Driver");
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/demo", "root", "root");
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    String updateQuery = "UPDATE event_details SET day=?, ename=?, edate_time=?, venue=?, judge1=?, judge2=?, org_faculty_team_number=?, prize1=?, prize2=?,cordinating_tno=?, sponsor=?,budget=? WHERE e_id=?";
    java.sql.PreparedStatement st = con.prepareStatement(updateQuery);
    for (int i = 0; i < model.getRowCount(); i++) {
        String id = model.getValueAt(i, 0).toString();
        int d = Integer.parseInt(model.getValueAt(i, 1).toString());
        String ename = model.getValueAt(i, 2).toString();
        String dateTimeString = model.getValueAt(i, 3).toString(); // date and time in string format
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss"); // format for date and time
        java.util.Date dateTime = sdf.parse(dateTimeString);
        java.sql.Timestamp sqlTimestamp = new java.sql.Timestamp(dateTime.getTime()); // convert to sql timestamp
        String venue = model.getValueAt(i, 4).toString();
        String j1 = model.getValueAt(i, 5).toString();
        String j2 = model.getValueAt(i, 6).toString();
        int oft = Integer.parseInt(model.getValueAt(i, 7).toString());
        String p1 = model.getValueAt(i, 8).toString();
        String p2 = model.getValueAt(i, 9).toString();
        int ctn = Integer.parseInt(model.getValueAt(i, 10).toString());
        String sponsors = model.getValueAt(i, 11).toString();
        int budgeT=Integer.parseInt(model.getValueAt(i, 12).toString());
        st.setInt(1, d);
        st.setString(2, ename);
        st.setTimestamp(3, sqlTimestamp); // set timestamp instead of date
        st.setString(4, venue);
        st.setString(5, j1);
        st.setString(6, j2);
        st.setInt(7, oft);
        st.setString(8, p1);
        st.setString(9, p2);
        st.setInt(10, ctn);
        st.setString(11, sponsors);
        st.setInt(12, budgeT);
        st.setString(13, id);
        
        st.addBatch();
    }
    st.executeBatch();
    JOptionPane.showMessageDialog(this, "Records updated successfully.");
} catch (Exception e) {
    JOptionPane.showMessageDialog(this, e.getMessage());
}



    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         Adminpage a=new Adminpage();
        a.show();
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
   try {
    Class.forName("com.mysql.jdbc.Driver");
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/demo", "root", "root");
    String sq = "SELECT * FROM event_details WHERE e_id=?";
    java.sql.PreparedStatement ps = con.prepareStatement(sq);
    ps.setString(1, jTextField1.getText());
    ResultSet rs = ps.executeQuery();
    if (!rs.next()) {
        JOptionPane.showMessageDialog(this, "Record not found.");

        
    } else {
        String query1 = "SELECT * FROM event_details WHERE e_id=?";
        java.sql.PreparedStatement ps1 = con.prepareStatement(query1);
        ps1.setString(1, jTextField1.getText());
        rs = ps1.executeQuery();
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        while (rs.next()) {
        String dateTimeString = rs.getTimestamp(4).toString();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        java.util.Date dateTime = sdf.parse(dateTimeString);
        String formattedDateTimeString = sdf.format(dateTime);
        model.addRow(new String[]{rs.getString(1), String.valueOf(rs.getInt(2)), rs.getString(3), formattedDateTimeString, rs.getString(5), rs.getString(6), rs.getString(7), String.valueOf(rs.getInt(8)), rs.getString(9), rs.getString(10), String.valueOf(rs.getInt(11)), rs.getString(12), String.valueOf(rs.getInt(13))});
    }
        
    }
    con.close();
} catch (Exception e) {
    JOptionPane.showMessageDialog(this, e.getMessage());
}
        // TODO add your handling code here:
         

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        try {
    Class.forName("com.mysql.jdbc.Driver");
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/demo", "root", "root");
    DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
    String updateQuery = "UPDATE event_details SET day=?, ename=?, edate_time=?, venue=?, judge1=?, judge2=?, org_faculty_team_number=?, prize1=?, prize2=?,cordinating_tno=?, sponsor=?,budget=? WHERE e_id=?";
    java.sql.PreparedStatement st = con.prepareStatement(updateQuery);
    for (int i = 0; i < model2.getRowCount(); i++) {
        String id = model2.getValueAt(i, 0).toString();
        int d = Integer.parseInt(model2.getValueAt(i, 1).toString());
        String ename = model2.getValueAt(i, 2).toString();
        String dateTimeString = model2.getValueAt(i, 3).toString(); // date and time in string format
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss"); // format for date and time
        java.util.Date dateTime = sdf.parse(dateTimeString);
        java.sql.Timestamp sqlTimestamp = new java.sql.Timestamp(dateTime.getTime()); // convert to sql timestamp
        String venue = model2.getValueAt(i, 4).toString();
        String j1 = model2.getValueAt(i, 5).toString();
        String j2 = model2.getValueAt(i, 6).toString();
        int oft = Integer.parseInt(model2.getValueAt(i, 7).toString());
        String p1 = model2.getValueAt(i, 8).toString();
        String p2 = model2.getValueAt(i, 9).toString();
        int ctn = Integer.parseInt(model2.getValueAt(i, 10).toString());
        String sponsors = model2.getValueAt(i, 11).toString();
        int budgeT=Integer.parseInt(model2.getValueAt(i, 12).toString());
        st.setInt(1, d);
        st.setString(2, ename);
        st.setTimestamp(3, sqlTimestamp); // set timestamp instead of date
        st.setString(4, venue);
        st.setString(5, j1);
        st.setString(6, j2);
        st.setInt(7, oft);
        st.setString(8, p1);
        st.setString(9, p2);
        st.setInt(10, ctn);
        st.setString(11, sponsors);
        st.setInt(12, budgeT);
        st.setString(13, id);
        
        st.addBatch();
    }
    st.executeBatch();
    JOptionPane.showMessageDialog(this, "Records updated successfully.");
     Statement st1=con.createStatement();
            String sql="select * from event_details";
            ResultSet rs=st1.executeQuery(sql);
            DefaultTableModel model1=(DefaultTableModel)jTable1.getModel();
            model1.setRowCount(0);
             while (rs.next()) {
        String dateTimeString = rs.getTimestamp(4).toString();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        java.util.Date dateTime = sdf.parse(dateTimeString);
        String formattedDateTimeString = sdf.format(dateTime);
        model1.addRow(new String[]{rs.getString(1), String.valueOf(rs.getInt(2)), rs.getString(3), formattedDateTimeString, rs.getString(5), rs.getString(6), rs.getString(7), String.valueOf(rs.getInt(8)), rs.getString(9), rs.getString(10), String.valueOf(rs.getInt(11)), rs.getString(12), String.valueOf(rs.getInt(13))});
    }
} catch (Exception e) {
    JOptionPane.showMessageDialog(this, e.getMessage());
}


        
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(updateevent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(updateevent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(updateevent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(updateevent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new updateevent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
