
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author kotta
 */
public class Faculty_management extends javax.swing.JFrame {

    /**
     * Creates new form Faculty_management
     */
    public Faculty_management() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "org_faculty_team_number", "facultyid", "name", "Mobile number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(67, 97, 772, 155));

        jButton1.setText("Show faculty");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 56, -1, -1));

        jButton2.setText("Insert Faculty");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(811, 373, -1, -1));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "org_faculty_team_number", "faculty_id", "name", "mobile number"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(64, 310, 685, 51));

        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Enter the details of faculty to insert");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 288, 198, -1));

        jButton3.setText("delete all the faculty");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 516, -1, 45));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(64, 458, 113, -1));

        jLabel2.setForeground(new java.awt.Color(255, 51, 0));
        jLabel2.setText("Enter the Faculty_Team number to delete the team::");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(64, 424, 351, -1));

        jButton4.setText("Delete team of faculties");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 507, -1, -1));

        jLabel3.setForeground(new java.awt.Color(255, 0, 51));
        jLabel3.setText("Enter the Faculty id  number to delete::");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(64, 567, 291, -1));
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(64, 589, 121, -1));

        jButton5.setText("Delete faculty");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 629, -1, -1));

        jButton6.setText("back");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1141, 15, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\kotta\\Documents\\Cultural Fest Management images\\Musician.jpeg")); // NOI18N
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -190, 2200, 1230));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con =DriverManager.getConnection("jdbc:mysql://localhost:3306/demo","root","root");
            Statement st=con.createStatement();
            String sql="select * from faculty_info";
            ResultSet rs=st.executeQuery(sql);
            DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
            while(rs.next())
            {
                model.addRow(new String[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
            }
            
            
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con =DriverManager.getConnection("jdbc:mysql://localhost:3306/demo","root","root");
            String query="insert into faculty_info values(?,?,?,?)";
            DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
            java.sql.PreparedStatement ps=con.prepareStatement(query);
           for (int i = 0; i < model.getRowCount(); i++) {
     String forgid = model.getValueAt(i, 0).toString();
       String fid  = model.getValueAt(i, 1).toString();
    String ename = model.getValueAt(i, 2).toString();
       String mno= model.getValueAt(i, 3).toString();
    if (forgid != null && fid != null && ename != null && mno != null) {
        ps.setString(1, forgid);
        ps.setString(2, fid);
        ps.setString(3, ename);
        ps.setString(4, mno);
        ps.addBatch();
        ps.clearParameters();
        if (i % 100 == 0) {
            ps.executeBatch(); // Execute batch every 100 rows
        }
    }
}
           ps.executeBatch(); // Execute remaining batch
           JOptionPane.showMessageDialog(this, "successfully inserted");
           DefaultTableModel model1=(DefaultTableModel)jTable1.getModel();
               int r = jTable1.getRowCount();
                model1.addRow(new String[]{model.getValueAt(0, 0).toString(),model.getValueAt(0, 1).toString(),model.getValueAt(0, 2).toString(),model.getValueAt(0, 3).toString()});
            model.setRowCount(0);
                model.addRow(new String[]{"","","",""});
ps.close();
con.close();

}       catch (SQLException ex) {
            Logger.getLogger(Faculty_management.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Faculty_management.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
    // Load the MySQL driver
    Class.forName("com.mysql.jdbc.Driver");

    // Create a connection to the MySQL database
    Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/demo", "root", "root");

    // Create a statement to execute the SQL query
    Statement statement = connection.createStatement();

    // Execute the SQL DELETE statement to remove all data from the table
    String sql = "DELETE FROM faculty_info;";
    int rowsAffected = statement.executeUpdate(sql);
      JOptionPane.showMessageDialog(this,rowsAffected+"faculty deleted");

    // Output the number of rows affected
    

    // Close the statement and connection
    statement.close();
    connection.close();
} catch (ClassNotFoundException e) {
    System.err.println("Unable to load database driver: " + e.getMessage());
} catch (SQLException e) {
    System.err.println("Unable to connect to database: " + e.getMessage());
}

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try {
    // Load the MySQL driver
    Class.forName("com.mysql.jdbc.Driver");

    // Create a connection to the MySQL database
    Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/demo", "root", "root");

    // Get the ID to be deleted from the text field
    String idToDelete = jTextField1.getText();

    // Create a prepared statement to execute the SQL DELETE statement
    String sql = "DELETE FROM faculty_info WHERE org_faculty_team_number = ?";
    PreparedStatement statement = connection.prepareStatement(sql);
    statement.setString(1, idToDelete);

    // Execute the SQL statement to delete the employee
    int rowsAffected = statement.executeUpdate();
    JOptionPane.showMessageDialog(this,rowsAffected+"faculty deleted");
    jTextField1.setText("");
    Statement st=connection.createStatement();
            String sq="select * from faculty_info";
            ResultSet rs=st.executeQuery(sq);
            DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
            while(rs.next())
            {
                model.addRow(new String[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
            }
               
    
    statement.close();
    connection.close();
} catch (ClassNotFoundException e) {
    System.err.println("Unable to load database driver: " + e.getMessage());
} catch (SQLException e) {
    System.err.println("Unable to connect to database: " + e.getMessage());
}

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
         try {
    // Load the MySQL driver
    Class.forName("com.mysql.jdbc.Driver");

    // Create a connection to the MySQL database
    Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/demo", "root", "root");

    // Get the ID to be deleted from the text field
    String idToDelete = jTextField2.getText();

    // Create a prepared statement to execute the SQL DELETE statement
    String sql = "DELETE FROM faculty_info WHERE f_id= ?";
    PreparedStatement statement = connection.prepareStatement(sql);
    statement.setString(1, idToDelete);

    // Execute the SQL statement to delete the employee
    int rowsAffected = statement.executeUpdate();
    JOptionPane.showMessageDialog(this,rowsAffected+"faculty deleted");
    jTextField2.setText("");
    Statement st=connection.createStatement();
            String sq="select * from faculty_info";
            ResultSet rs=st.executeQuery(sq);
            DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
            while(rs.next())
            {
                model.addRow(new String[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
            }
               
    
    statement.close();
    connection.close();
} catch (ClassNotFoundException e) {
    System.err.println("Unable to load database driver: " + e.getMessage());
} catch (SQLException e) {
    System.err.println("Unable to connect to database: " + e.getMessage());
}

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
         Adminpage a=new Adminpage();
        a.show();
        dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Faculty_management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Faculty_management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Faculty_management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Faculty_management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Faculty_management().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
